{"ast":null,"code":"var _jsxFileName = \"/Users/ingridf/Documents/side_projects/nba-scoreboard/frontend/src/components/Games.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; // import Game from '../Game.js';\n\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Games = () => {\n  _s();\n\n  const [initialState, setInitialState] = useState([]);\n  useEffect(() => {\n    fetch('/games').then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n    }).then(jsonResponse => setInitialState(jsonResponse));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: initialState.length > 0 && initialState.map(game => {\n      game;\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Games, \"iZ4XHcIBbiLfHKYv845N7obEw1A=\");\n\n_c = Games;\n\nvar _c;\n\n$RefreshReg$(_c, \"Games\");","map":{"version":3,"sources":["/Users/ingridf/Documents/side_projects/nba-scoreboard/frontend/src/components/Games.js"],"names":["React","useEffect","useState","Games","initialState","setInitialState","fetch","then","res","ok","json","jsonResponse","length","map","game"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;;AAGA,OAAO,MAAMC,KAAK,GAAG,MAAM;AAAA;;AACvB,QAAM,CAAEC,YAAF,EAAgBC,eAAhB,IAAoCH,QAAQ,CAAC,EAAD,CAAlD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAEZK,IAAAA,KAAK,CAAC,QAAD,CAAL,CAAgBC,IAAhB,CAAqBC,GAAG,IAAI;AACxB,UAAGA,GAAG,CAACC,EAAP,EAAW;AACP,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACH;AACJ,KAJD,EAIGH,IAJH,CAIQI,YAAY,IAAIN,eAAe,CAACM,YAAD,CAJvC;AAMH,GARQ,EAQN,EARM,CAAT;AAUA,sBAAQ;AAAA,cACFP,YAAY,CAACQ,MAAb,GAAsB,CAAtB,IAA2BR,YAAY,CAACS,GAAb,CAAiBC,IAAI,IAAI;AAACA,MAAAA,IAAI;AAAC,KAA/B;AADzB;AAAA;AAAA;AAAA;AAAA,UAAR;AAIH,CAjBM;;GAAMX,K;;KAAAA,K","sourcesContent":["import React from 'react';\n// import Game from '../Game.js';\nimport {useEffect, useState} from 'react';\n\n\nexport const Games = () => {\n    const [ initialState, setInitialState ] = useState([]);\n\n    useEffect(() => {\n        \n        fetch('/games').then(res => {\n            if(res.ok) {\n                return res.json()\n            }\n        }).then(jsonResponse => setInitialState(jsonResponse))\n\n    }, [])\n\n    return( <div>\n        { initialState.length > 0 && initialState.map(game => {game})}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}