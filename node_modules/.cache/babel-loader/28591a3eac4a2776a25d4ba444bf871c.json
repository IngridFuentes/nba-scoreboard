{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nexport const Games = () => {\n  _s();\n\n  const [initialState, setInitialState] = useState([]);\n  const url = `http://localhost:3001/api/games`;\n  useEffect(() => {\n    fetch(url).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n    }).then(jsonResponse => setInitialState(jsonResponse));\n  }, []);\n  console.log(initialState);\n  return console.log('hey') // { initialState.length > 0 && initialState.map(e => {e})}\n  ;\n};\n\n_s(Games, \"iZ4XHcIBbiLfHKYv845N7obEw1A=\");\n\n_c = Games;\n\nvar _c;\n\n$RefreshReg$(_c, \"Games\");","map":{"version":3,"sources":["/Users/ingridf/Documents/side_projects/nba-scoreboard/frontend/src/components/Games.js"],"names":["React","axios","useEffect","useState","Games","initialState","setInitialState","url","fetch","then","res","ok","json","jsonResponse","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AAGA,OAAO,MAAMC,KAAK,GAAG,MAAM;AAAA;;AACvB,QAAM,CAAEC,YAAF,EAAgBC,eAAhB,IAAoCH,QAAQ,CAAC,EAAD,CAAlD;AAEA,QAAMI,GAAG,GAAG,iCAAZ;AAEAL,EAAAA,SAAS,CAAC,MAAM;AAEZM,IAAAA,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgBC,GAAG,IAAI;AACnB,UAAGA,GAAG,CAACC,EAAP,EAAW;AACP,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACH;AACJ,KAJD,EAIGH,IAJH,CAIQI,YAAY,IAAIP,eAAe,CAACO,YAAD,CAJvC;AAMH,GARQ,EAQN,EARM,CAAT;AASAC,EAAAA,OAAO,CAACC,GAAR,CAAYV,YAAZ;AAEA,SACIS,OAAO,CAACC,GAAR,CAAY,KAAZ,CADJ,CAEI;AAFJ;AAIH,CApBM;;GAAMX,K;;KAAAA,K","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport {useEffect, useState} from 'react';\n\n\nexport const Games = () => {\n    const [ initialState, setInitialState ] = useState([]);\n\n    const url= `http://localhost:3001/api/games`;\n\n    useEffect(() => {\n        \n        fetch(url).then(res => {\n            if(res.ok) {\n                return res.json()\n            }\n        }).then(jsonResponse => setInitialState(jsonResponse))\n\n    }, [])\n    console.log(initialState)\n\n    return(\n        console.log('hey')\n        // { initialState.length > 0 && initialState.map(e => {e})}\n    )\n}"]},"metadata":{},"sourceType":"module"}