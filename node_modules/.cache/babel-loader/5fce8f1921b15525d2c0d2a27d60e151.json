{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '../composeClasses';\nimport isHostComponent from '../utils/isHostComponent';\nimport { getBackdropUtilityClass } from './backdropUnstyledClasses';\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    invisible\n  } = styleProps;\n  const slots = {\n    root: ['root', invisible && 'invisible']\n  };\n  return composeClasses(slots, getBackdropUtilityClass, classes);\n};\n\nconst BackdropUnstyled = /*#__PURE__*/React.forwardRef(function BackdropUnstyled(props, ref) {\n  const {\n    classes: classesProp,\n    className,\n    invisible = false,\n    component = 'div',\n    components = {},\n    componentsProps = {},\n\n    /* eslint-disable react/prop-types */\n    theme\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"invisible\", \"component\", \"components\", \"componentsProps\", \"theme\"]);\n\n  const styleProps = _extends({}, props, {\n    classes: classesProp,\n    invisible\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  const Root = components.Root || component;\n  const rootProps = componentsProps.root || {};\n  return /*#__PURE__*/React.createElement(Root, _extends({\n    \"aria-hidden\": true\n  }, rootProps, !isHostComponent(Root) && {\n    as: component,\n    styleProps: _extends({}, styleProps, rootProps.styleProps),\n    theme\n  }, {\n    ref: ref\n  }, other, {\n    className: clsx(classes.root, rootProps.className, className)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? BackdropUnstyled.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Backdrop.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Backdrop.\n   * @default {}\n   */\n  componentsProps: PropTypes.object,\n\n  /**\n   * If `true`, the backdrop is invisible.\n   * It can be used when rendering a popover or a custom select component.\n   * @default false\n   */\n  invisible: PropTypes.bool\n} : void 0;\nexport default BackdropUnstyled;","map":{"version":3,"sources":["/Users/ingridf/Documents/side_projects/nba-scoreboard/client/node_modules/@material-ui/unstyled/BackdropUnstyled/BackdropUnstyled.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","clsx","composeClasses","isHostComponent","getBackdropUtilityClass","useUtilityClasses","styleProps","classes","invisible","slots","root","BackdropUnstyled","forwardRef","props","ref","classesProp","className","component","components","componentsProps","theme","other","Root","rootProps","createElement","as","process","env","NODE_ENV","propTypes","children","node","object","string","elementType","shape","bool"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '../composeClasses';\nimport isHostComponent from '../utils/isHostComponent';\nimport { getBackdropUtilityClass } from './backdropUnstyledClasses';\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    invisible\n  } = styleProps;\n  const slots = {\n    root: ['root', invisible && 'invisible']\n  };\n  return composeClasses(slots, getBackdropUtilityClass, classes);\n};\n\nconst BackdropUnstyled = /*#__PURE__*/React.forwardRef(function BackdropUnstyled(props, ref) {\n  const {\n    classes: classesProp,\n    className,\n    invisible = false,\n    component = 'div',\n    components = {},\n    componentsProps = {},\n\n    /* eslint-disable react/prop-types */\n    theme\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"invisible\", \"component\", \"components\", \"componentsProps\", \"theme\"]);\n\n  const styleProps = _extends({}, props, {\n    classes: classesProp,\n    invisible\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  const Root = components.Root || component;\n  const rootProps = componentsProps.root || {};\n  return /*#__PURE__*/React.createElement(Root, _extends({\n    \"aria-hidden\": true\n  }, rootProps, !isHostComponent(Root) && {\n    as: component,\n    styleProps: _extends({}, styleProps, rootProps.styleProps),\n    theme\n  }, {\n    ref: ref\n  }, other, {\n    className: clsx(classes.root, rootProps.className, className)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? BackdropUnstyled.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Backdrop.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Backdrop.\n   * @default {}\n   */\n  componentsProps: PropTypes.object,\n\n  /**\n   * If `true`, the backdrop is invisible.\n   * It can be used when rendering a popover or a custom select component.\n   * @default false\n   */\n  invisible: PropTypes.bool\n} : void 0;\nexport default BackdropUnstyled;"]},"metadata":{},"sourceType":"module"}